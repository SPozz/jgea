n_input(Ninp),findall(N,(node_id(N),outdegree(N,M), M < Ninp),        Nodes),random_member(Nod,Nodes),findall(V,input_val(V),Values),findall(W,(edge(Nod,_,X),input(X,W)),ActualValues),flatten(ActualValues,FlattenValues),subtract(Values,FlattenValues,Difference),length(Difference,D),(D == 0 ->   false;     random_member(Target,Nodes),    random_member(NewValue,Difference),    (edge(Nod,Target,ID) ->      	input(ID, Inputs),        retract(input(ID,Inputs)),    	append([NewValue],Inputs, NewInputs),        assert(input(ID,NewInputs));    gensym(edg,NewEdge),        assert(edge_id(NewEdge)),        assert(edge(Nod,Target,NewEdge)),        assert(input(NewEdge,[NewValue])))    ).